Ÿ
sD:\Projects\DefensePoint\whitesource-testcases-csharp\AlbumViewerVNext\src\AlbumViewerBusiness\AccountRepository.cs
	namespace		 	
AlbumViewerBusiness		
 
{

 
public 

class 
AccountRepository "
:# $%
EntityFrameworkRepository% >
<> ?
AlbumViewerContext? Q
,Q R
UserR V
>V W
{ 
public 
AccountRepository  
(  !
AlbumViewerContext! 3
context4 ;
); <
: 
base 
( 
context 
) 
{ 	
}
 
public 
async 
Task 
< 
bool 
> 
Authenticate  ,
(, -
string- 3
username4 <
,< =
string> D
passwordE M
)M N
{ 	
var 
hashedPassword 
=  
password! )
;) *
var 
user 
= 
await 
Context $
.$ %
Users% *
.* +
FirstOrDefaultAsync+ >
(> ?
usr? B
=>C E
usr 
.  
Username  (
==) +
username, 4
&&5 7
usr 
.  
Password  (
==) +
hashedPassword, :
): ;
;; <
if 
( 
user 
== 
null 
) 
return 
false 
; 
return!! 
true!! 
;!! 
}"" 	
public$$ 
async$$ 
Task$$ 
<$$ 
User$$ 
>$$ #
AuthenticateAndLoadUser$$  7
($$7 8
string$$8 >
username$$? G
,$$G H
string$$I O
password$$P X
)$$X Y
{%% 	
var(( 
hashedPassword(( 
=((  
password((! )
;(() *
var** 
user** 
=** 
await** 
Context** $
.**$ %
Users**% *
.++ 
FirstOrDefaultAsync++ .
(++. /
usr++/ 2
=>++3 5
usr++6 9
.++9 :
Username++: B
==++C E
username++F N
&&++O Q
usr,,1 4
.,,4 5
Password,,5 =
==,,> @
hashedPassword,,A O
),,O P
;,,P Q
return-- 
user-- 
;-- 
}.. 	
}// 
}00 Ûá
qD:\Projects\DefensePoint\whitesource-testcases-csharp\AlbumViewerVNext\src\AlbumViewerBusiness\AlbumRepository.cs
	namespace 	
AlbumViewerBusiness
 
{ 
public 

class 
AlbumRepository  
:! "%
EntityFrameworkRepository# <
<< =
AlbumViewerContext= O
,O P
AlbumQ V
>V W
{ 
public 
AlbumRepository 
( 
AlbumViewerContext 1
context2 9
)9 :
: 
base 
( 
context 
) 
{ 	
}
 
	protected 
override 
void 
OnAfterCreated  .
(. /
Album/ 4
entity5 ;
); <
{ 	
base 
. 
OnAfterCreated 
(  
entity  &
)& '
;' (
entity 
. 
Artist 
= 
new 
Artist  &
(& '
)' (
;( )
entity 
. 
Tracks 
= 
new 
List  $
<$ %
Track% *
>* +
(+ ,
), -
;- .
} 	
public%% 
override%% 
async%% 
Task%% "
<%%" #
Album%%# (
>%%( )
Load%%* .
(%%. /
object%%/ 5
albumId%%6 =
)%%= >
{&& 	
Album'' 
album'' 
='' 
null'' 
;'' 
try(( 
{)) 
int** 
id** 
=** 
(** 
int** 
)** 
albumId** %
;**% &
album++ 
=++ 
await++ 
Context++ %
.++% &
Albums++& ,
.,, 
Include,, 
(,, 
ctx,,  
=>,,! #
ctx,,$ '
.,,' (
Tracks,,( .
),,. /
.-- 
Include-- 
(-- 
ctx--  
=>--! #
ctx--$ '
.--' (
Artist--( .
)--. /
... 
FirstOrDefaultAsync.. (
(..( )
alb..) ,
=>..- /
alb..0 3
...3 4
Id..4 6
==..7 9
id..: <
)..< =
;..= >
if00 
(00 
album00 
!=00 
null00 !
)00! "
OnAfterLoaded11 !
(11! "
album11" '
)11' (
;11( )
}22 
catch33 
(33 %
InvalidOperationException33 ,
)33, -
{44 
SetError66 
(66 
$str66 L
)66L M
;66M N
return77 
null77 
;77 
}88 
catch99 
(99 
	Exception99 
ex99 
)99  
{:: 
SetError<< 
(<< 
ex<< 
)<< 
;<< 
}== 
return?? 
album?? 
;?? 
}@@ 	
publicBB 
overrideBB 
asyncBB 
TaskBB "
<BB" #
AlbumBB# (
>BB( )
LoadWithRawSqlBB* 8
(BB8 9
stringBB9 ?
titleBB@ E
)BBE F
{CC 	
AlbumDD 
albumDD 
=DD 
nullDD 
;DD 
tryEE 
{FF 
albumGG 
=GG 
awaitGG 
ContextGG %
.GG% &
AlbumsGG& ,
.GG, -

FromSqlRawGG- 7
(GG7 8
$strGG8 ^
+GG_ `
titleGGa f
+GGg h
$strGGi l
)GGl m
.GGm n 
FirstOrDefaultAsync	GGn Å
(
GGÅ Ç
)
GGÇ É
;
GGÉ Ñ
ifII 
(II 
albumII 
!=II 
nullII !
)II! "
OnAfterLoadedJJ !
(JJ! "
albumJJ" '
)JJ' (
;JJ( )
}KK 
catchLL 
(LL %
InvalidOperationExceptionLL ,
)LL, -
{MM 
SetErrorOO 
(OO 
$strOO L
)OOL M
;OOM N
returnPP 
nullPP 
;PP 
}QQ 
catchRR 
(RR 
	ExceptionRR 
exRR 
)RR  
{SS 
SetErrorUU 
(UU 
exUU 
)UU 
;UU 
}VV 
returnXX 
albumXX 
;XX 
}YY 	
public[[ 
async[[ 
Task[[ 
<[[ 
List[[ 
<[[ 
Album[[ $
>[[$ %
>[[% &
GetAllAlbums[[' 3
([[3 4
int[[4 7
page[[8 <
=[[= >
$num[[? @
,[[@ A
int[[B E
pageSize[[F N
=[[O P
$num[[Q S
)[[S T
{\\ 	

IQueryable]] 
<]] 
Album]] 
>]] 
albums]] $
=]]% &
Context]]' .
.]]. /
Albums]]/ 5
.^^ 
Include^^ 
(^^ 
ctx^^ 
=>^^ 
ctx^^  #
.^^# $
Tracks^^$ *
)^^* +
.__ 
Include__ 
(__ 
ctx__ 
=>__ 
ctx__  #
.__# $
Artist__$ *
)__* +
.`` 
OrderBy`` 
(`` 
alb`` 
=>`` 
alb``  #
.``# $
Title``$ )
)``) *
;``* +
ifbb 
(bb 
pagebb 
>bb 
$numbb 
)bb 
{cc 
albumsdd 
=dd 
albumsdd 
.ee  !
Skipee! %
(ee% &
(ee& '
pageee' +
-ee, -
$numee. /
)ee/ 0
*ee1 2
pageSizeee3 ;
)ee; <
.ff  !
Takeff! %
(ff% &
pageSizeff& .
)ff. /
;ff/ 0
}gg 
returnii 
awaitii 
albumsii 
.ii  
ToListAsyncii  +
(ii+ ,
)ii, -
;ii- .
}jj 	
publictt 
asynctt 
Tasktt 
<tt 
Albumtt 
>tt  
	SaveAlbumtt! *
(tt* +
Albumtt+ 0
postedAlbumtt1 <
)tt< =
{uu 	
intvv 
idvv 
=vv 
postedAlbumvv  
.vv  !
Idvv! #
;vv# $
Albumxx 
albumxx 
;xx 
ifzz 
(zz 
idzz 
<zz 
$numzz 
)zz 
{{{ 
album|| 
=|| 
Create|| 
(|| 
)||  
;||  !
album}} 
.}} 
Artist}} 
=}} 
new}} "
Artist}}# )
(}}) *
)}}* +
;}}+ ,
} 
else
ÄÄ 
{
ÅÅ 
album
ÇÇ 
=
ÇÇ 
await
ÇÇ 
Load
ÇÇ "
(
ÇÇ" #
id
ÇÇ# %
)
ÇÇ% &
;
ÇÇ& '
if
ÉÉ 
(
ÉÉ 
album
ÉÉ 
==
ÉÉ 
null
ÉÉ !
)
ÉÉ! "
album
ÑÑ 
=
ÑÑ 
Create
ÑÑ "
(
ÑÑ" #
)
ÑÑ# $
;
ÑÑ$ %
}
ÖÖ 
if
àà 
(
àà 
album
àà 
.
àà 
Artist
àà 
.
àà 
Id
àà 
<
àà  !
$num
àà" #
)
àà# $
{
ââ 
var
ää 
artist
ää 
=
ää 
await
ää "
Context
ää# *
.
ää* +
Artists
ää+ 2
.
ãã !
FirstOrDefaultAsync
ãã (
(
ãã( )
art
ãã) ,
=>
ãã- /
art
ãã0 3
.
ãã3 4

ArtistName
ãã4 >
==
ãã? A
postedAlbum
ããB M
.
ããM N
Artist
ããN T
.
ããT U

ArtistName
ããU _
)
ãã_ `
;
ãã` a
if
åå 
(
åå 
artist
åå 
!=
åå 
null
åå "
)
åå" #
album
çç 
.
çç 
Artist
çç  
.
çç  !
Id
çç! #
=
çç$ %
artist
çç& ,
.
çç, -
Id
çç- /
;
çç/ 0
}
éé 
	DataUtils
êê 
.
êê 
CopyObjectData
êê $
(
êê$ %
postedAlbum
êê% 0
.
êê0 1
Artist
êê1 7
,
êê7 8
album
êê9 >
.
êê> ?
Artist
êê? E
,
êêE F
$str
êêG K
)
êêK L
;
êêL M
if
ìì 
(
ìì 
album
ìì 
.
ìì 
Artist
ìì 
.
ìì 
Id
ìì 
<
ìì  !
$num
ìì" #
)
ìì# $
Context
îî 
.
îî 
Artists
îî 
.
îî  
Add
îî  #
(
îî# $
album
îî$ )
.
îî) *
Artist
îî* 0
)
îî0 1
;
îî1 2
album
ññ 
.
ññ 
ArtistId
ññ 
=
ññ 
album
ññ "
.
ññ" #
Artist
ññ# )
.
ññ) *
Id
ññ* ,
;
ññ, -
	DataUtils
óó 
.
óó 
CopyObjectData
óó $
(
óó$ %
postedAlbum
óó% 0
,
óó0 1
album
óó2 7
,
óó7 8
$str
óó9 T
)
óóT U
;
óóU V
foreach
úú 
(
úú 
var
úú 
postedTrack
úú $
in
úú% '
postedAlbum
úú( 3
.
úú3 4
Tracks
úú4 :
)
úú: ;
{
ùù 
var
ûû 
track
ûû 
=
ûû 
album
ûû !
.
ûû! "
Tracks
ûû" (
.
ûû( )
FirstOrDefault
ûû) 7
(
ûû7 8
trk
ûû8 ;
=>
ûû< >
trk
ûû? B
.
ûûB C
Id
ûûC E
==
ûûF H
postedTrack
ûûI T
.
ûûT U
Id
ûûU W
)
ûûW X
;
ûûX Y
if
üü 
(
üü 
postedTrack
üü 
.
üü  
Id
üü  "
>
üü# $
$num
üü% &
&&
üü' )
track
üü* /
!=
üü0 2
null
üü3 7
)
üü7 8
	DataUtils
†† 
.
†† 
CopyObjectData
†† ,
(
††, -
postedTrack
††- 8
,
††8 9
track
††: ?
)
††? @
;
††@ A
else
°° 
{
¢¢ 
track
££ 
=
££ 
new
££ 
Track
££  %
(
££% &
)
££& '
;
££' (
Context
§§ 
.
§§ 
Tracks
§§ "
.
§§" #
Add
§§# &
(
§§& '
track
§§' ,
)
§§, -
;
§§- .
	DataUtils
•• 
.
•• 
CopyObjectData
•• ,
(
••, -
postedTrack
••- 8
,
••8 9
track
••: ?
,
••? @
$str
••A V
)
••V W
;
••W X
album
¶¶ 
.
¶¶ 
Tracks
¶¶  
.
¶¶  !
Add
¶¶! $
(
¶¶$ %
track
¶¶% *
)
¶¶* +
;
¶¶+ ,
}
ßß 
}
®® 
var
¨¨ 
deletedTracks
¨¨ 
=
¨¨ 
album
¨¨  %
.
¨¨% &
Tracks
¨¨& ,
.
≠≠ 
Where
≠≠ 
(
≠≠ 
trk
≠≠ 
=>
≠≠ 
trk
≠≠ !
.
≠≠! "
Id
≠≠" $
>
≠≠% &
$num
≠≠' (
&&
≠≠) +
!
ÆÆ  !
postedAlbum
ÆÆ! ,
.
ÆÆ, -
Tracks
ÆÆ- 3
.
ØØ$ %
Where
ØØ% *
(
ØØ* +
t
ØØ+ ,
=>
ØØ- /
t
ØØ0 1
.
ØØ1 2
Id
ØØ2 4
>
ØØ5 6
$num
ØØ7 8
)
ØØ8 9
.
∞∞$ %
Select
∞∞% +
(
∞∞+ ,
t
∞∞, -
=>
∞∞. 0
t
∞∞1 2
.
∞∞2 3
Id
∞∞3 5
)
∞∞5 6
.
±±  !
Contains
±±! )
(
±±) *
trk
±±* -
.
±±- .
Id
±±. 0
)
±±0 1
)
±±1 2
.
≤≤ 
ToList
≤≤ 
(
≤≤ 
)
≤≤ 
;
≤≤ 
foreach
¥¥ 
(
¥¥ 
var
¥¥ 
dtrack
¥¥ 
in
¥¥  "
deletedTracks
¥¥# 0
)
¥¥0 1
album
µµ 
.
µµ 
Tracks
µµ 
.
µµ 
Remove
µµ #
(
µµ# $
dtrack
µµ$ *
)
µµ* +
;
µµ+ ,
if
∏∏ 
(
∏∏ 
!
∏∏ 
await
∏∏ 
	SaveAsync
∏∏  
(
∏∏  !
)
∏∏! "
)
∏∏" #
return
ππ 
null
ππ 
;
ππ 
return
ªª 
album
ªª 
;
ªª 
}
ºº 	
public
øø 
async
øø 
Task
øø 
<
øø 
bool
øø 
>
øø 
DeleteAlbum
øø  +
(
øø+ ,
int
øø, /
id
øø0 2
,
øø2 3
bool
øø4 8
noSaveChanges
øø9 F
=
øøG H
false
øøI N
)
øøN O
{
¿¿ 	
var
¡¡ 
album
¡¡ 
=
¡¡ 
await
¡¡ 
Context
¡¡ %
.
¡¡% &
Albums
¡¡& ,
.
¬¬ 
Include
¬¬ 
(
¬¬ 
a
¬¬ 
=>
¬¬ 
a
¬¬ 
.
¬¬  
Tracks
¬¬  &
)
¬¬& '
.
√√ !
FirstOrDefaultAsync
√√ $
(
√√$ %
a
√√% &
=>
√√' )
a
√√* +
.
√√+ ,
Id
√√, .
==
√√/ 1
id
√√2 4
)
√√4 5
;
√√5 6
if
≈≈ 
(
≈≈ 
album
≈≈ 
==
≈≈ 
null
≈≈ 
)
≈≈ 
{
∆∆ 
SetError
«« 
(
«« 
$str
«« ,
)
««, -
;
««- .
return
»» 
false
»» 
;
»» 
}
…… 
var
ÃÃ 
tracks
ÃÃ 
=
ÃÃ 
album
ÃÃ 
.
ÃÃ 
Tracks
ÃÃ %
.
ÃÃ% &
ToList
ÃÃ& ,
(
ÃÃ, -
)
ÃÃ- .
;
ÃÃ. /
foreach
ÕÕ 
(
ÕÕ 
var
ÕÕ 
track
ÕÕ 
in
ÕÕ  
tracks
ÕÕ! '
)
ÕÕ' (
{
ŒŒ 
album
““ 
.
““ 
Tracks
““ 
.
““ 
Remove
““ #
(
““# $
track
““$ )
)
““) *
;
““* +
Context
”” 
.
”” 
Tracks
”” 
.
”” 
Remove
”” %
(
””% &
track
””& +
)
””+ ,
;
””, -
}
‘‘ 
Context
÷÷ 
.
÷÷ 
Albums
÷÷ 
.
÷÷ 
Remove
÷÷ !
(
÷÷! "
album
÷÷" '
)
÷÷' (
;
÷÷( )
if
ŸŸ 
(
ŸŸ 
!
ŸŸ 
noSaveChanges
ŸŸ 
)
ŸŸ 
{
⁄⁄ 
var
€€ 
result
€€ 
=
€€ 
await
€€ "
	SaveAsync
€€# ,
(
€€, -
)
€€- .
;
€€. /
return
›› 
result
›› 
;
›› 
}
ﬁﬁ 
return
‡‡ 
true
‡‡ 
;
‡‡ 
}
·· 	
	protected
‰‰ 
override
‰‰ 
bool
‰‰ 

OnValidate
‰‰  *
(
‰‰* +
Album
‰‰+ 0
entity
‰‰1 7
)
‰‰7 8
{
ÂÂ 	
if
ÊÊ 
(
ÊÊ 
entity
ÊÊ 
==
ÊÊ 
null
ÊÊ 
)
ÊÊ 
{
ÁÁ 
ValidationErrors
ËË  
.
ËË  !
Add
ËË! $
(
ËË$ %
$str
ËË% :
)
ËË: ;
;
ËË; <
return
ÈÈ 
false
ÈÈ 
;
ÈÈ 
}
ÍÍ 
if
ÏÏ 
(
ÏÏ 
string
ÏÏ 
.
ÏÏ 
IsNullOrEmpty
ÏÏ $
(
ÏÏ$ %
entity
ÏÏ% +
.
ÏÏ+ ,
Title
ÏÏ, 1
)
ÏÏ1 2
)
ÏÏ2 3
ValidationErrors
ÌÌ  
.
ÌÌ  !
Add
ÌÌ! $
(
ÌÌ$ %
$str
ÌÌ% K
,
ÌÌK L
$str
ÌÌM T
)
ÌÌT U
;
ÌÌU V
else
ÓÓ 
if
ÓÓ 
(
ÓÓ 
string
ÓÓ 
.
ÓÓ 
IsNullOrEmpty
ÓÓ )
(
ÓÓ) *
entity
ÓÓ* 0
.
ÓÓ0 1
Description
ÓÓ1 <
)
ÓÓ< =
||
ÓÓ> @
entity
ÓÓA G
.
ÓÓG H
Description
ÓÓH S
.
ÓÓS T
Length
ÓÓT Z
<
ÓÓ[ \
$num
ÓÓ] _
)
ÓÓ_ `
ValidationErrors
ÔÔ  
.
ÔÔ  !
Add
ÔÔ! $
(
ÔÔ$ %
$str
ÔÔ% ^
)
ÔÔ^ _
;
ÔÔ_ `
else
 
if
 
(
 
entity
 
.
 
Tracks
 "
.
" #
Count
# (
<
) *
$num
+ ,
)
, -
ValidationErrors
ÒÒ  
.
ÒÒ  !
Add
ÒÒ! $
(
ÒÒ$ %
$str
ÒÒ% T
)
ÒÒT U
;
ÒÒU V
return
ÛÛ 
ValidationErrors
ÛÛ #
.
ÛÛ# $
Count
ÛÛ$ )
<
ÛÛ* +
$num
ÛÛ, -
;
ÛÛ- .
}
ÙÙ 	
}
ˆˆ 
}¯¯ ΩJ
rD:\Projects\DefensePoint\whitesource-testcases-csharp\AlbumViewerVNext\src\AlbumViewerBusiness\ArtistRepository.cs
	namespace

 	
AlbumViewerBusiness


 
{ 
public 
class 
ArtistRepository 
: %
EntityFrameworkRepository  9
<9 :
AlbumViewerContext: L
,L M
ArtistM S
>S T
{ 
public 

ArtistRepository 
( 
AlbumViewerContext .
context/ 6
)6 7
: 	
base
 
( 
context 
) 
{ 
} 
public 

async 
Task 
< 
List 
<  
ArtistWithAlbumCount /
>/ 0
>0 1
GetAllArtists2 ?
(? @
)@ A
{ 
return 
await 
Context 
. 
Artists $
. 
OrderBy 
( 
art 
=> 
art 
.  

ArtistName  *
)* +
. 
Select 
( 
art 
=> 
new  
ArtistWithAlbumCount 3
(3 4
)4 5
{ 

ArtistName 
= 
art  
.  !

ArtistName! +
,+ ,
Description 
= 
art !
.! "
Description" -
,- .
ImageUrl 
= 
art 
. 
ImageUrl '
,' (
Id 
= 
art 
. 
Id 
, 
	AmazonUrl 
= 
art 
.  
	AmazonUrl  )
,) *

AlbumCount 
= 
Context $
.$ %
Albums% +
.+ ,
Count, 1
(1 2
alb2 5
=>6 8
alb9 <
.< =
ArtistId= E
==F H
artI L
.L M
IdM O
)O P
} 
) 
. 
ToListAsync 
( 
) 
; 
}   
public'' 

async'' 
Task'' 
<'' 
List'' 
<'' 
Album''  
>''  !
>''! "
GetAlbumsForArtist''# 5
(''5 6
int''6 9
artistId'': B
)''B C
{(( 
return)) 
await)) 
Context)) 
.)) 
Albums)) #
.** 
Include** 
(** 
a** 
=>** 
a** 
.** 
Tracks** "
)**" #
.++ 
Include++ 
(++ 
a++ 
=>++ 
a++ 
.++ 
Artist++ "
)++" #
.,, 
Where,, 
(,, 
a,, 
=>,, 
a,, 
.,, 
ArtistId,, "
==,,# %
artistId,,& .
),,. /
.-- 
ToListAsync-- 
(-- 
)-- 
;-- 
}.. 
public66 

async66 
Task66 
<66 
List66 
<66 
ArtistLookupItem66 +
>66+ ,
>66, -
ArtistLookup66. :
(66: ;
string66; A
search66B H
=66I J
null66K O
)66O P
{77 
if88 

(88 
string88 
.88 
IsNullOrEmpty88  
(88  !
search88! '
)88' (
)88( )
return99 
new99 
List99 
<99 
ArtistLookupItem99 ,
>99, -
(99- .
)99. /
;99/ 0
var;; 
repo;; 
=;; 
new;; 
AlbumRepository;; &
(;;& '
Context;;' .
);;. /
;;;/ 0
var== 
term== 
=== 
search== 
.== 
ToLower== !
(==! "
)==" #
;==# $
return>> 
await>> 
repo>> 
.>> 
Context>> !
.>>! "
Artists>>" )
.?? 
Where?? 
(?? 
a?? 
=>?? 
a?? 
.?? 

ArtistName?? $
.??$ %
ToLower??% ,
(??, -
)??- .
.??. /

StartsWith??/ 9
(??9 :
term??: >
)??> ?
)??? @
.@@ 
Select@@ 
(@@ 
a@@ 
=>@@ 
new@@ 
ArtistLookupItem@@ -
{AA 
nameBB 
=BB 
aBB 
.BB 

ArtistNameBB #
,BB# $
idCC 
=CC 
aCC 
.CC 

ArtistNameCC !
}DD 
)DD 
.EE 
ToListAsyncEE 
(EE 
)EE 
;EE 
}FF 
publicJJ 

asyncJJ 
TaskJJ 
<JJ 
boolJJ 
>JJ 
DeleteArtistJJ (
(JJ( )
intJJ) ,
idJJ- /
)JJ/ 0
{KK 
boolLL 
resultLL 
=LL 
falseLL 
;LL 
varNN 
artistNN 
=NN 
awaitNN 
ContextNN "
.NN" #
ArtistsNN# *
.NN* +
FirstOrDefaultAsyncNN+ >
(NN> ?
artNN? B
=>NNC E
artNNF I
.NNI J
IdNNJ L
==NNM O
idNNP R
)NNR S
;NNS T
ifQQ 

(QQ 
artistQQ 
==QQ 
nullQQ 
)QQ 
returnRR 
trueRR 
;RR 
varTT 
albumIdsTT 
=TT 
awaitTT 
ContextTT $
.TT$ %
AlbumsTT% +
.TT+ ,
WhereTT, 1
(TT1 2
albTT2 5
=>TT6 8
albTT9 <
.TT< =
ArtistIdTT= E
==TTF H
idTTI K
)TTK L
.TTL M
SelectTTM S
(TTS T
albTTT W
=>TTX Z
albTT[ ^
.TT^ _
IdTT_ a
)TTa b
.TTb c
ToListAsyncTTc n
(TTn o
)TTo p
;TTp q
varVV 
	albumRepoVV 
=VV 
newVV 
AlbumRepositoryVV +
(VV+ ,
ContextVV, 3
)VV3 4
;VV4 5
foreachXX 
(XX 
varXX 
albumIdXX 
inXX 
albumIdsXX  (
)XX( )
{YY 	
result[[ 
=[[ 
await[[ 
	albumRepo[[ $
.[[$ %
DeleteAlbum[[% 0
([[0 1
albumId[[1 8
,[[8 9
noSaveChanges[[: G
:[[G H
true[[H L
)[[L M
;[[M N
if\\ 
(\\ 
!\\ 
result\\ 
)\\ 
return]] 
false]] 
;]] 
}^^ 	
Context__ 
.__ 
Artists__ 
.__ 
Remove__ 
(__ 
artist__ %
)__% &
;__& '
result`` 
=`` 
await`` 
	SaveAsync``  
(``  !
)``! "
;``" #
ifbb 

(bb 
!bb 
resultbb 
)bb 
returncc 
falsecc 
;cc 
returnee 
resultee 
;ee 
}ff 
	protectedhh 
overridehh 
boolhh 

OnValidatehh &
(hh& '
Artisthh' -
entityhh. 4
)hh4 5
{ii 
ifjj 

(jj 
entityjj 
==jj 
nulljj 
)jj 
{kk 	
ValidationErrorsll 
.ll 
Addll  
(ll  !
$strll! 9
)ll9 :
;ll: ;
returnmm 
falsemm 
;mm 
}nn 	
ifpp 

(pp 
stringpp 
.pp 
IsNullOrEmptypp  
(pp  !
entitypp! '
.pp' (

ArtistNamepp( 2
)pp2 3
)pp3 4
ValidationErrorsqq 
.qq 
Addqq  
(qq  !
$strqq! >
,qq> ?
$strqq? L
)qqL M
;qqM N
elserr 
ifrr 
(rr 
stringrr 
.rr 
IsNullOrEmptyrr %
(rr% &
entityrr& ,
.rr, -
Descriptionrr- 8
)rr8 9
||rr: <
entityrr= C
.rrC D
DescriptionrrD O
.rrO P
LengthrrP V
<rrW X
$numrrY [
)rr[ \
ValidationErrorsss 
.ss 
Addss  
(ss  !
$strss! N
,ssN O
$strssP ]
)ss] ^
;ss^ _
returnuu 
ValidationErrorsuu 
.uu  
Countuu  %
==uu& (
$numuu) *
;uu* +
}vv 
}xx 
publiczz 

classzz 
ArtistLookupItemzz !
{{{ 
public|| 
string|| 
name|| 
{|| 
get||  
;||  !
set||" %
;||% &
}||' (
public}} 
string}} 
id}} 
{}} 
get}} 
;}} 
set}}  #
;}}# $
}}}% &
}~~ 
} Ω
sD:\Projects\DefensePoint\whitesource-testcases-csharp\AlbumViewerVNext\src\AlbumViewerBusiness\Configuration\App.cs
	namespace 	
AlbumViewerBusiness
 
. 
Configuration +
{ 
public 

class 
App 
{ 
public 
static $
ApplicationConfiguration .
Configuration/ <
;< =
public 
static 
DateTime 
MIN_DATE_VALUE -
=. /
new0 3
DateTime4 <
(< =
$num= A
,A B
$numC D
,D E
$numF G
)G H
;H I
static 
App 
( 
) 
{ 	
Configuration 
= 
new $
ApplicationConfiguration  8
(8 9
)9 :
;: ;
} 	
}!! 
}"" í
àD:\Projects\DefensePoint\whitesource-testcases-csharp\AlbumViewerVNext\src\AlbumViewerBusiness\Configuration\ApplicationConfiguration.cs
	namespace 	
AlbumViewerBusiness
 
. 
Configuration +
{ 
public 

class $
ApplicationConfiguration )
{ 
public 
string 
ApplicationName %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
=4 5
$str6 M
;M N
public 
int 
MaxListItems 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
$num0 2
;2 3
public 
EmailConfiguration !
EmailSettings" /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
=> ?
new@ C
EmailConfigurationD V
(V W
)W X
;X Y
public 
TokenConfiguration !
JwtToken" *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
=9 :
new; >
TokenConfiguration? Q
(Q R
)R S
;S T
} 
public 

class 
EmailConfiguration #
{ 
public 
string 

MailServer  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
$str1 <
;< =
public 
bool 
UseTls 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
MailServerUsername (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
MailServerPassword (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
SenderAddress #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
$str4 I
;I J
public 
string 

SenderName  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
$str1 K
;K L
} 
public!! 

class!! 
TokenConfiguration!! #
{"" 
public## 
string## 
Issuer## 
{## 
get## "
;##" #
set##$ '
;##' (
}##) *
=##+ ,
$str##- F
;##F G
public$$ 
string$$ 
Audience$$ 
{$$  
get$$! $
;$$$ %
set$$& )
;$$) *
}$$+ ,
=$$- .
$str$$/ H
;$$H I
public&& 
string&& 

SigningKey&&  
{&&! "
get&&# &
;&&& '
set&&( +
;&&+ ,
}&&- .
=&&/ 0
$str&&1 ^
;&&^ _
public(( 
int(( 
TokenTimeoutMinutes(( &
{((' (
get(() ,
;((, -
set((. 1
;((1 2
}((3 4
=((5 6
$num((7 9
;((9 :
})) 
}** ™
nD:\Projects\DefensePoint\whitesource-testcases-csharp\AlbumViewerVNext\src\AlbumViewerBusiness\Models\Album.cs
	namespace 	
AlbumViewerBusiness
 
{ 
[ 
DebuggerDisplay 
( 
$str 2
)2 3
]3 4
public 

class 
Album 
{		 
public

 
int

 
Id

 
{

 
get

 
;

 
set

  
;

  !
}

" #
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
Year 
{ 
get 
; 
set "
;" #
}$ %
public 
string 
ImageUrl 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
	AmazonUrl 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 

SpotifyUrl  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	

ForeignKey	 
( 
$str 
) 
] 
public 
int 
ArtistId 
{ 
get !
;! "
set# &
;& '
}( )
public 
virtual 
Artist 
Artist $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
virtual 
IList 
< 
Track "
>" #
Tracks$ *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
Album 
( 
) 
{ 	
} 	
} 
} ≥
oD:\Projects\DefensePoint\whitesource-testcases-csharp\AlbumViewerVNext\src\AlbumViewerBusiness\Models\Artist.cs
	namespace 	
AlbumViewerBusiness
 
{ 
[ 
DebuggerDisplay 
( 
$str #
)# $
]$ %
public 

class 
Artist 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 

ArtistName		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
public

 
string

 
Description

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 
string 
ImageUrl 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
	AmazonUrl 
{  !
get" %
;% &
set' *
;* +
}, -
} 
public 

class  
ArtistWithAlbumCount %
:& '
Artist( .
{ 
public 
int 

AlbumCount 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} €
ÉD:\Projects\DefensePoint\whitesource-testcases-csharp\AlbumViewerVNext\src\AlbumViewerBusiness\Models\Context\AlbumViewerContext.cs
	namespace 	
AlbumViewerBusiness
 
{ 
public 

class 
AlbumViewerContext #
:$ %
	DbContext& /
{ 
public		 
string		 
ConnectionString		 &
{		' (
get		) ,
;		, -
set		. 1
;		1 2
}		3 4
public 
AlbumViewerContext !
(! "
DbContextOptions" 2
options3 :
): ;
:< =
base> B
(B C
optionsC J
)J K
{ 	
} 	
public 
AlbumViewerContext !
(! "
)" #
{ 	
}
 
public 
DbSet 
< 
Album 
> 
Albums "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DbSet 
< 
Artist 
> 
Artists $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DbSet 
< 
Track 
> 
Tracks "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DbSet 
< 
User 
> 
Users  
{! "
get# &
;& '
set( +
;+ ,
}. /
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
builder= D
)D E
{ 	
base 
. 
OnModelCreating  
(  !
builder! (
)( )
;) *
} 	
}** 
}++ ∞,
àD:\Projects\DefensePoint\whitesource-testcases-csharp\AlbumViewerVNext\src\AlbumViewerBusiness\Models\Context\AlbumViewerDataImporter.cs
	namespace 	
AlbumViewerBusiness
 
{ 
public 

class #
AlbumViewerDataImporter )
{ 
public 
static 
bool 
EnsureAlbumData *
(* +
AlbumViewerContext+ =
context> E
,E F
stringG M
jsonDataFilePathN ^
)^ _
{ 	
bool 
hasData 
= 
false  
;  !
try 
{ 
hasData 
= 
context !
.! "
Albums" (
.( )
Any) ,
(, -
)- .
;. /
} 
catch 
{ 
context 
. 
Database  
.  !
EnsureCreated! .
(. /
)/ 0
;0 1
hasData 
= 
context !
.! "
Albums" (
.( )
Any) ,
(, -
)- .
;. /
} 
if 
( 
! 
hasData 
) 
{   
string!! 
json!! 
=!! 
System!! $
.!!$ %
IO!!% '
.!!' (
File!!( ,
.!!, -
ReadAllText!!- 8
(!!8 9
jsonDataFilePath!!9 I
)!!I J
;!!J K
return"" 
ImportFromJson"" %
(""% &
context""& -
,""- .
json""/ 3
)""3 4
>""5 6
$num""7 8
;""8 9
}## 
return&& 
true&& 
;&& 
}'' 	
public.. 
static.. 
int.. 
ImportFromJson.. (
(..( )
AlbumViewerContext..) ;
context..< C
,..C D
string..E K
json..L P
)..P Q
{// 	
var00 
albums00 
=00 
JsonConvert00 $
.00$ %
DeserializeObject00% 6
<006 7
Album007 <
[00< =
]00= >
>00> ?
(00? @
json00@ D
)00D E
;00E F
foreach22 
(22 
var22 
album22 
in22 !
albums22" (
)22( )
{33 
album55 
.55 
Id55 
=55 
$num55 
;55 
album66 
.66 
ArtistId66 
=66  
$num66! "
;66" #
album77 
.77 
Artist77 
.77 
Id77 
=77  !
$num77" #
;77# $
var99 
existingArtist99 "
=99# $
context99% ,
.99, -
Artists99- 4
.994 5
FirstOrDefault995 C
(99C D
a99D E
=>99F H
a99I J
.99J K

ArtistName99K U
==99V X
album99Y ^
.99^ _
Artist99_ e
.99e f

ArtistName99f p
)99p q
;99q r
if:: 
(:: 
existingArtist:: "
==::# %
null::& *
)::* +
{;; 
context<< 
.<< 
Artists<< #
.<<# $
Add<<$ '
(<<' (
album<<( -
.<<- .
Artist<<. 4
)<<4 5
;<<5 6
}== 
else>> 
{?? 
album@@ 
.@@ 
Artist@@  
=@@! "
existingArtist@@# 1
;@@1 2
albumAA 
.AA 
ArtistIdAA "
=AA# $
existingArtistAA% 3
.AA3 4
IdAA4 6
;AA6 7
}BB 
ifDD 
(DD 
albumDD 
.DD 
TracksDD  
!=DD! #
nullDD$ (
)DD( )
{EE 
foreachFF 
(FF 
varFF  
trackFF! &
inFF' )
albumFF* /
.FF/ 0
TracksFF0 6
)FF6 7
{GG 
trackHH 
.HH 
IdHH  
=HH! "
$numHH# $
;HH$ %
contextII 
.II  
TracksII  &
.II& '
AddII' *
(II* +
trackII+ 0
)II0 1
;II1 2
}JJ 
}KK 
contextLL 
.LL 
AddLL 
(LL 
albumLL !
)LL! "
;LL" #
tryNN 
{OO 
contextPP 
.PP 
SaveChangesPP '
(PP' (
)PP( )
;PP) *
}QQ 
catchRR 
{SS 
ConsoleTT 
.TT 
	WriteLineTT %
(TT% &
$strTT& 6
+TT7 8
albumTT9 >
.TT> ?
ArtistIdTT? G
)TTG H
;TTH I
}UU 
}VV 
varXX 
userXX 
=XX 
newXX 
UserXX 
(XX  
)XX  !
{YY 
UsernameZZ 
=ZZ 
$strZZ !
,ZZ! "
Password[[ 
=[[ 
$str[[ !
,[[! "
Fullname\\ 
=\\ 
$str\\ &
,\\& '
}]] 
;]] 
context^^ 
.^^ 
Users^^ 
.^^ 
Add^^ 
(^^ 
user^^ "
)^^" #
;^^# $
context__ 
.__ 
SaveChanges__ 
(__  
)__  !
;__! "
returnaa 
$numaa 
;aa 
}bb 	
}cc 
}dd Ù
nD:\Projects\DefensePoint\whitesource-testcases-csharp\AlbumViewerVNext\src\AlbumViewerBusiness\Models\Track.cs
	namespace 	
AlbumViewerBusiness
 
{ 
[ 
DebuggerDisplay 
( 
$str !
)! "
]" #
public 

class 
Track 
{ 
public		 
int		 
Id		 
{		 
get		 
;		 
set		  
;		  !
}		" #
public

 
int

 
AlbumId

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
public 
string 
SongName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Length 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
Bytes 
{ 
get 
; 
set  #
;# $
}% &
public 
decimal 
	UnitPrice  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
BuildInsertQuery &
(& '
Track' ,
track- 2
)2 3
{4 5
return 
$str h
+i j
trackk p
.p q
AlbumIdq x
+y z
$str	{ Ä
+
Å Ç
track
É à
.
à â
SongName
â ë
+
í ì
$str
î ö
+
õ ú
track
ù ¢
.
¢ £
Length
£ ©
+
™ ´
$str
¨ ±
+
≤ ≥
track
¥ π
.
π ∫
Bytes
∫ ø
+
¿ ¡
$str
¬ «
+
» …
track
  œ
.
œ –
	UnitPrice
– Ÿ
+
⁄ €
$str
‹ ‡
;
‡ ·
} 	
public 
override 
string 
ToString '
(' (
)( )
{ 	
return 
SongName 
; 
} 	
} 
} ˝
mD:\Projects\DefensePoint\whitesource-testcases-csharp\AlbumViewerVNext\src\AlbumViewerBusiness\Models\User.cs
	namespace 	
AlbumViewerBusiness
 
{ 
public 

class 
User 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}, -
public		 
string		 
Password		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		, -
public 
string 
Fullname 
{  
get! $
;$ %
set& )
;) *
}, -
} 
} µ7
äD:\Projects\DefensePoint\whitesource-testcases-csharp\AlbumViewerVNext\src\AlbumViewerBusiness\Westwind.BusinessObjects\DbSetExtensions.cs
	namespace 	
Westwind
 
. 
BusinessObjects "
{ 
public 

static 
class 
DbSetExtensions '
{ 
public   
static   
TEntity   
Find   "
<  " #
TEntity  # *
>  * +
(  + ,
this  , 0
DbSet  1 6
<  6 7
TEntity  7 >
>  > ?
set  @ C
,  C D
params  E K
object  L R
[  R S
]  S T
	keyValues  U ^
)  ^ _
where  ` e
TEntity  f m
:  n o
class  p u
{!! 	
var'' 
prop'' 
='' 
set'' 
.'' 
GetType'' "
(''" #
)''# $
.(( 
GetField(( 
((( 
$str(( $
,(($ %
BindingFlags((& 2
.((2 3
GetField((3 ;
|((< =
BindingFlags((> J
.((J K
	NonPublic((K T
|((U V
BindingFlags((W c
.((c d
Instance((d l
)((l m
;((m n
var** 
context** 
=** 
prop** 
.++ 
GetValue++ 
(++ 
set++ 
)++ 
as++ !
	DbContext++" +
;+++ ,
var-- 

entityType-- 
=-- 
context-- $
.--$ %
Model--% *
.--* +
FindEntityType--+ 9
(--9 :
typeof--: @
(--@ A
TEntity--A H
)--H I
)--I J
;--J K
var.. 
keys.. 
=.. 

entityType.. !
...! "
GetKeys.." )
(..) *
)..* +
;..+ ,
var// 
entries// 
=// 
context// !
.//! "
ChangeTracker//" /
./// 0
Entries//0 7
<//7 8
TEntity//8 ?
>//? @
(//@ A
)//A B
;//B C
var00 
	parameter00 
=00 

Expression00 &
.00& '
	Parameter00' 0
(000 1
typeof001 7
(007 8
TEntity008 ?
)00? @
,00@ A
$str00B E
)00E F
;00F G

IQueryable11 
<11 
TEntity11 
>11 
query11  %
=11& '
context11( /
.11/ 0
Set110 3
<113 4
TEntity114 ;
>11; <
(11< =
)11= >
;11> ?
var44 
i44 
=44 
$num44 
;44 
foreach77 
(77 
var77 
property77 !
in77" $
keys77% )
.77) *

SelectMany77* 4
(774 5
x775 6
=>777 9
x77: ;
.77; <

Properties77< F
)77F G
)77G H
{88 
var99 
keyValue99 
=99 
	keyValues99 (
[99( )
i99) *
]99* +
;99+ ,
entries<< 
=<< 
entries<< !
.<<! "
Where<<" '
(<<' (
e<<( )
=><<* ,
keyValue<<- 5
.<<5 6
Equals<<6 <
(<<< =
e<<= >
.<<> ?
Property<<? G
(<<G H
property<<H P
.<<P Q
Name<<Q U
)<<U V
.<<V W
CurrentValue<<W c
)<<c d
)<<d e
;<<e f
var?? 

expression?? 
=??  

Expression??! +
.??+ ,
Lambda??, 2
(??2 3

Expression@@ 
.@@ 
Equal@@ $
(@@$ %

ExpressionAA "
.AA" #
PropertyAA# +
(AA+ ,
	parameterAA, 5
,AA5 6
propertyAA7 ?
.AA? @
NameAA@ D
)AAD E
,AAE F

ExpressionBB "
.BB" #
ConstantBB# +
(BB+ ,
keyValueBB, 4
)BB4 5
)BB5 6
,BB6 7
	parameterCC 
)CC 
asCC !

ExpressionCC" ,
<CC, -
FuncCC- 1
<CC1 2
TEntityCC2 9
,CC9 :
boolCC; ?
>CC? @
>CC@ A
;CCA B
queryEE 
=EE 
queryEE 
.EE 
WhereEE #
(EE# $

expressionEE$ .
)EE. /
;EE/ 0
iGG 
++GG 
;GG 
}HH 
varJJ 
entityJJ 
=JJ 
entriesJJ  
.JJ  !
SelectJJ! '
(JJ' (
xJJ( )
=>JJ* ,
xJJ- .
.JJ. /
EntityJJ/ 5
)JJ5 6
.JJ6 7
FirstOrDefaultJJ7 E
(JJE F
)JJF G
;JJG H
ifKK 
(KK 
entityKK 
!=KK 
nullKK 
)KK 
returnLL 
entityLL 
;LL 
entityOO 
=OO 
queryOO 
.OO 
FirstOrDefaultOO )
(OO) *
)OO* +
;OO+ ,
returnQQ 
entityQQ 
;QQ 
}RR 	
public[[ 
static[[ 
object[[ 
[[[ 
][[ 
GetEntityKey[[ +
<[[+ ,
T[[, -
>[[- .
([[. /
this[[/ 3
	DbContext[[4 =
context[[> E
,[[E F
T[[G H
entity[[I O
)[[O P
where[[Q V
T[[W X
:[[Y Z
class[[[ `
{\\ 	
var]] 
state]] 
=]] 
context]] 
.]]  
Entry]]  %
(]]% &
entity]]& ,
)]], -
;]]- .
var^^ 
metadata^^ 
=^^ 
state^^  
.^^  !
Metadata^^! )
;^^) *
var__ 
key__ 
=__ 
metadata__ 
.__ 
FindPrimaryKey__ -
(__- .
)__. /
;__/ 0
varbb 
listbb 
=bb 
newbb 
Listbb 
<bb  
objectbb  &
>bb& '
(bb' (
)bb( )
;bb) *
foreachcc 
(cc 
varcc 
propcc 
incc  
keycc! $
.cc$ %

Propertiescc% /
)cc/ 0
{dd 
varee 
getteree 
=ee 
propee !
.ee! "
	GetGetteree" +
(ee+ ,
)ee, -
;ee- .
varff 
valff 
=ff 
getterff  
.ff  !
GetClrValueff! ,
(ff, -
entityff- 3
)ff3 4
;ff4 5
listgg 
.gg 
Addgg 
(gg 
valgg 
)gg 
;gg 
}hh 
returnjj 
listjj 
.jj 
ToArrayjj 
(jj  
)jj  !
;jj! "
}kk 	
}ll 
}mm ≈⁄
îD:\Projects\DefensePoint\whitesource-testcases-csharp\AlbumViewerVNext\src\AlbumViewerBusiness\Westwind.BusinessObjects\EntityFrameworkRepository.cs
	namespace

 	
Westwind


 
.

 
BusinessObjects

 "
{ 
public 

class %
EntityFrameworkRepository *
<* +
TContext+ 3
,3 4
TEntity5 <
>< =
where 
TContext 
: 
	DbContext "
where 
TEntity 
: 
class 
, 
new "
(" #
)# $
{ 
public %
EntityFrameworkRepository (
(( )
TContext) 1
context2 9
)9 :
{ 	
Context 
= 
context 
; 
} 	
public 
TContext 
Context 
{  !
get" %
;% &
set' *
;* +
}, -
	protected$$ 
DbSet$$ 
<$$ 
TEntity$$ 
>$$  
DbSet$$! &
{%% 	
get&& 
{'' 
if(( 
((( 
_dbSet(( 
==(( 
null(( "
)((" #
_dbSet)) 
=)) 
Context)) $
.))$ %
Set))% (
<))( )
TEntity))) 0
>))0 1
())1 2
)))2 3
;))3 4
return** 
_dbSet** 
;** 
}++ 
},, 	
private-- 
DbSet-- 
<-- 
TEntity-- 
>-- 
_dbSet-- %
;--% &
public<< %
ValidationErrorCollection<< (
ValidationErrors<<) 9
{== 	
get>> 
{?? 
if@@ 
(@@ 
_validationErrors@@ %
==@@& (
null@@) -
)@@- .
_validationErrorsAA %
=AA& '
newAA( +%
ValidationErrorCollectionAA, E
(AAE F
)AAF G
;AAG H
returnBB 
_validationErrorsBB (
;BB( )
}CC 
}DD 	%
ValidationErrorCollectionEE !
_validationErrorsEE" 3
;EE3 4
publicKK 
boolKK 
AutoValidateKK  
{KK! "
getKK# &
;KK& '
setKK( +
;KK+ ,
}KK- .
publicQQ 
boolQQ 
ThrowExceptionsQQ #
{QQ$ %
getQQ& )
;QQ) *
setQQ+ .
;QQ. /
}QQ0 1
publicVV 
stringVV 
ErrorMessageVV "
{WW 	
getXX 
{YY 
ifZZ 
(ZZ 
ErrorExceptionZZ "
==ZZ# %
nullZZ& *
)ZZ* +
return[[ 
$str[[ 
;[[ 
return\\ 
ErrorException\\ %
.\\% &
Message\\& -
;\\- .
}]] 
set^^ 
{__ 
if`` 
(`` 
string`` 
.`` 
IsNullOrEmpty`` (
(``( )
value``) .
)``. /
)``/ 0
ErrorExceptionaa "
=aa# $
nullaa% )
;aa) *
elsebb 
ErrorExceptiondd "
=dd# $
newdd% (
	Exceptiondd) 2
(dd2 3
valuedd3 8
)dd8 9
;dd9 :
}ee 
}ff 	
publickk 
	Exceptionkk 
ErrorExceptionkk '
{kk( )
getkk* -
;kk- .
setkk/ 2
;kk2 3
}kk4 5
publicoo 
virtualoo 
asyncoo 
Taskoo !
<oo! "
TEntityoo" )
>oo) *
LoadWithRawSqloo+ 9
(oo9 :
stringoo: @
titleooA F
)ooF G
{pp 	
returnqq 
nullqq 
;qq 
}rr 	
publicyy 
TEntityyy 
Createyy 
(yy 
)yy 
{zz 	
TEntity{{ 
entity{{ 
={{ 
new{{  
TEntity{{! (
({{( )
){{) *
;{{* +
Context|| 
.|| 
Add|| 
<|| 
TEntity|| 
>||  
(||  !
entity||! '
)||' (
;||( )
OnAfterCreated~~ 
(~~ 
entity~~ !
)~~! "
;~~" #
return
ÄÄ 
entity
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
public
ãã 
T
ãã 
Create
ãã 
<
ãã 
T
ãã 
>
ãã 
(
ãã 
)
ãã 
where
åå
 
T
åå 
:
åå 
class
åå 
,
åå 
new
åå 
(
åå 
)
åå  
{
çç 	
var
éé 
entity
éé 
=
éé 
new
éé 
T
éé 
(
éé 
)
éé  
;
éé  !
Context
èè 
.
èè 
Add
èè 
<
èè 
T
èè 
>
èè 
(
èè 
entity
èè !
)
èè! "
;
èè" #
return
êê 
entity
êê 
;
êê 
}
ëë 	
public
ôô 
virtual
ôô 
async
ôô 
Task
ôô !
<
ôô! "
TEntity
ôô" )
>
ôô) *
Load
ôô+ /
(
ôô/ 0
object
ôô0 6
id
ôô7 9
)
ôô9 :
{
öö 	
return
õõ 
await
õõ 
LoadBase
õõ !
(
õõ! "
id
õõ" $
)
õõ$ %
;
õõ% &
}
úú 	
public
§§ 
virtual
§§ 
async
§§ 
Task
§§ !
<
§§! "
T
§§" #
>
§§# $
Load
§§% )
<
§§) *
T
§§* +
>
§§+ ,
(
§§, -
object
§§- 3
id
§§4 6
)
§§6 7
where
•• 
T
•• 
:
•• 
class
•• 
,
•• 
new
••  
(
••  !
)
••! "
{
¶¶ 	
return
®® 
await
®® 
LoadBase
®® !
<
®®! "
T
®®" #
>
®®# $
(
®®$ %
id
®®% '
)
®®' (
;
®®( )
}
©© 	
	protected
∞∞ 
virtual
∞∞ 
async
∞∞ 
Task
∞∞  $
<
∞∞$ %
TEntity
∞∞% ,
>
∞∞, -
LoadBase
∞∞. 6
(
∞∞6 7
object
∞∞7 =
id
∞∞> @
)
∞∞@ A
{
±± 	
object
≤≤ 
match
≤≤ 
=
≤≤ 
null
≤≤ 
;
≤≤  
try
≥≥ 
{
¥¥ 
match
µµ 
=
µµ 
DbSet
µµ 
.
µµ 
Find
µµ "
(
µµ" #
id
µµ# %
)
µµ% &
;
µµ& '
if
∂∂ 
(
∂∂ 
match
∂∂ 
==
∂∂ 
null
∂∂ !
)
∂∂! "
{
∑∑ 
SetError
∏∏ 
(
∏∏ 
$str
∏∏ E
)
∏∏E F
;
∏∏F G
return
ππ 
await
ππ  
Task
ππ! %
.
ππ% &

FromResult
ππ& 0
<
ππ0 1
TEntity
ππ1 8
>
ππ8 9
(
ππ9 :
null
ππ: >
)
ππ> ?
;
ππ? @
}
∫∫ 
}
ªª 
catch
ºº 
(
ºº 
	Exception
ºº 
ex
ºº 
)
ºº  
{
ΩΩ 
SetError
øø 
(
øø 
ex
øø 
)
øø 
;
øø 
}
¿¿ 
var
√√ 
entity
√√ 
=
√√ 
match
√√ 
as
√√ !
TEntity
√√" )
;
√√) *
OnAfterLoaded
≈≈ 
(
≈≈ 
entity
≈≈  
)
≈≈  !
;
≈≈! "
return
«« 
await
«« 
Task
«« 
.
«« 

FromResult
«« (
<
««( )
TEntity
««) 0
>
««0 1
(
««1 2
entity
««2 8
)
««8 9
;
««9 :
}
»» 	
	protected
—— 
virtual
—— 
async
—— 
Task
——  $
<
——$ %
T
——% &
>
——& '
LoadBase
——( 0
<
——0 1
T
——1 2
>
——2 3
(
——3 4
object
——4 :
id
——; =
)
——= >
where
““ 
T
““ 
:
““ 
class
““ 
,
““ 
new
““  
(
““  !
)
““! "
{
”” 	
T
‘‘ 
entity
‘‘ 
=
‘‘ 
null
‘‘ 
;
‘‘ 
try
’’ 
{
÷÷ 
var
◊◊ 
set
◊◊ 
=
◊◊ 
Context
◊◊ !
.
◊◊! "
Set
◊◊" %
<
◊◊% &
T
◊◊& '
>
◊◊' (
(
◊◊( )
)
◊◊) *
;
◊◊* +
entity
ÿÿ 
=
ÿÿ 
set
ÿÿ 
.
ÿÿ 
Find
ÿÿ !
(
ÿÿ! "
id
ÿÿ" $
)
ÿÿ$ %
;
ÿÿ% &
if
ŸŸ 
(
ŸŸ 
entity
ŸŸ 
==
ŸŸ 
null
ŸŸ "
)
ŸŸ" #
{
⁄⁄ 
SetError
€€ 
(
€€ 
$str
€€ E
)
€€E F
;
€€F G
return
‹‹ 
await
‹‹  
Task
‹‹! %
.
‹‹% &

FromResult
‹‹& 0
<
‹‹0 1
T
‹‹1 2
>
‹‹2 3
(
‹‹3 4
null
‹‹4 8
)
‹‹8 9
;
‹‹9 :
}
›› 
}
ﬁﬁ 
catch
ﬂﬂ 
(
ﬂﬂ 
	Exception
ﬂﬂ 
ex
ﬂﬂ 
)
ﬂﬂ  
{
‡‡ 
SetError
‚‚ 
(
‚‚ 
ex
‚‚ 
)
‚‚ 
;
‚‚ 
}
„„ 
return
ÂÂ 
await
ÂÂ 
Task
ÂÂ 
.
ÂÂ 

FromResult
ÂÂ (
<
ÂÂ( )
T
ÂÂ) *
>
ÂÂ* +
(
ÂÂ+ ,
entity
ÂÂ, 2
)
ÂÂ2 3
;
ÂÂ3 4
}
ÊÊ 	
	protected
ÌÌ 
virtual
ÌÌ 
async
ÌÌ 
Task
ÌÌ  $
<
ÌÌ$ %
TEntity
ÌÌ% ,
>
ÌÌ, -
LoadBase
ÌÌ. 6
(
ÌÌ6 7

Expression
ÌÌ7 A
<
ÌÌA B
Func
ÌÌB F
<
ÌÌF G
TEntity
ÌÌG N
,
ÌÌN O
bool
ÌÌP T
>
ÌÌT U
>
ÌÌU V
whereClauseLambda
ÌÌW h
)
ÌÌh i
{
ÓÓ 	
SetError
ÔÔ 
(
ÔÔ 
)
ÔÔ 
;
ÔÔ 
try
ÒÒ 
{
ÚÚ 
var
ÛÛ 
entity
ÛÛ 
=
ÛÛ 
await
ÛÛ "
DbSet
ÛÛ# (
.
ÛÛ( )!
FirstOrDefaultAsync
ÛÛ) <
(
ÛÛ< =
whereClauseLambda
ÛÛ= N
)
ÛÛN O
;
ÛÛO P
return
ˆˆ 
entity
ˆˆ 
;
ˆˆ 
}
˜˜ 
catch
¯¯ 
(
¯¯ '
InvalidOperationException
¯¯ ,
)
¯¯, -
{
˘˘ 
SetError
˚˚ 
(
˚˚ 
$str
˚˚ 2
)
˚˚2 3
;
˚˚3 4
return
¸¸ 
null
¸¸ 
;
¸¸ 
}
˝˝ 
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ 
ex
˛˛ 
)
˛˛  
{
ˇˇ 
SetError
ÅÅ 
(
ÅÅ 
ex
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÇÇ 
return
ÑÑ 
null
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
public
ïï 
async
ïï 
Task
ïï 
<
ïï 
bool
ïï 
>
ïï 
	SaveAsync
ïï  )
(
ïï) *
TEntity
ïï* 1
entity
ïï2 8
=
ïï9 :
null
ïï; ?
)
ïï? @
{
ññ 	
if
óó 
(
óó 
entity
óó 
!=
óó 
null
óó 
)
óó 
{
òò 
if
ôô 
(
ôô 
!
ôô 
OnBeforeSave
ôô !
(
ôô! "
entity
ôô" (
)
ôô( )
)
ôô) *
return
öö 
false
öö  
;
öö  !
if
úú 
(
úú 
AutoValidate
úú  
&&
úú! #
!
úú$ %
Validate
úú% -
(
úú- .
entity
úú. 4
)
úú4 5
)
úú5 6
return
ùù 
false
ùù  
;
ùù  !
var
üü 
entry
üü 
=
üü 
Context
üü #
.
üü# $
Entry
üü$ )
(
üü) *
entity
üü* 0
)
üü0 1
;
üü1 2
if
†† 
(
†† 
entry
†† 
.
†† 
State
†† 
==
††  "
EntityState
††# .
.
††. /
Detached
††/ 7
)
††7 8
{
°° 
bool
££ 
exists
££ 
=
££  !
entry
££" '
.
££' (
IsKeySet
££( 0
;
££0 1
if
±± 
(
±± 
exists
±± 
)
±± 
{
≤≤ 
entry
≥≥ 
=
≥≥ 
Context
≥≥  '
.
≥≥' (
Update
≥≥( .
(
≥≥. /
entity
≥≥/ 5
)
≥≥5 6
;
≥≥6 7
entry
¥¥ 
.
¥¥ 
State
¥¥ #
=
¥¥$ %
EntityState
¥¥& 1
.
¥¥1 2
Modified
¥¥2 :
;
¥¥: ;
}
µµ 
else
∂∂ 
{
∑∑ 
Context
∏∏ 
.
∏∏  
Add
∏∏  #
(
∏∏# $
entity
∏∏$ *
)
∏∏* +
;
∏∏+ ,
entry
ππ 
.
ππ 
State
ππ #
=
ππ$ %
EntityState
ππ& 1
.
ππ1 2
Added
ππ2 7
;
ππ7 8
}
∫∫ 
}
ªª 
}
ºº 
int
¿¿ 
result
¿¿ 
=
¿¿ 
-
¿¿ 
$num
¿¿ 
;
¿¿ 
try
¡¡ 
{
¬¬ 
result
√√ 
=
√√ 
await
√√ 
Context
√√ &
.
√√& '
SaveChangesAsync
√√' 7
(
√√7 8
)
√√8 9
;
√√9 :
if
ƒƒ 
(
ƒƒ 
result
ƒƒ 
==
ƒƒ 
-
ƒƒ 
$num
ƒƒ  
)
ƒƒ  !
return
≈≈ 
false
≈≈  
;
≈≈  !
}
∆∆ 
catch
«« 
(
«« 
	Exception
«« 
ex
«« 
)
««  
{
»» 
SetError
…… 
(
…… 
ex
…… 
.
…… 
GetBaseException
…… ,
(
……, -
)
……- .
)
……. /
;
……/ 0
return
   
false
   
;
   
}
ÀÀ 
if
ÕÕ 
(
ÕÕ 
result
ÕÕ 
==
ÕÕ 
-
ÕÕ 
$num
ÕÕ 
)
ÕÕ 
return
ŒŒ 
false
ŒŒ 
;
ŒŒ 
if
–– 
(
–– 
entity
–– 
!=
–– 
null
–– 
&&
–– !
!
––" #
OnAfterSave
––# .
(
––. /
entity
––/ 5
)
––5 6
)
––6 7
return
—— 
false
—— 
;
—— 
return
”” 
true
”” 
;
”” 
}
‘‘ 	
public
›› 
async
›› 
Task
›› 
<
›› 
bool
›› 
>
›› 
	SaveAsync
››  )
(
››) *
TEntity
››* 1
entity
››2 8
,
››8 9
bool
››: >
useTransaction
››? M
)
››M N
{
ﬁﬁ 	
if
ﬂﬂ 
(
ﬂﬂ 
useTransaction
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 
using
·· 
(
·· 
var
·· 
tx
·· 
=
·· 
Context
··  '
.
··' (
Database
··( 0
.
··0 1
BeginTransaction
··1 A
(
··A B
)
··B C
)
··C D
{
‚‚ 
if
„„ 
(
„„ 
await
„„ 
	SaveAsync
„„ '
(
„„' (
entity
„„( .
)
„„. /
)
„„/ 0
{
‰‰ 
tx
ÂÂ 
.
ÂÂ 
Commit
ÂÂ !
(
ÂÂ! "
)
ÂÂ" #
;
ÂÂ# $
return
ÊÊ 
true
ÊÊ #
;
ÊÊ# $
}
ÁÁ 
return
ËË 
false
ËË  
;
ËË  !
}
ÈÈ 
}
ÍÍ 
return
ÏÏ 
await
ÏÏ 
	SaveAsync
ÏÏ "
(
ÏÏ" #
entity
ÏÏ# )
)
ÏÏ) *
;
ÏÏ* +
}
ÌÌ 	
public
ˆˆ 
bool
ˆˆ 
Save
ˆˆ 
(
ˆˆ 
TEntity
ˆˆ  
entity
ˆˆ! '
=
ˆˆ( )
null
ˆˆ* .
)
ˆˆ. /
{
˜˜ 	
if
¯¯ 
(
¯¯ 
entity
¯¯ 
!=
¯¯ 
null
¯¯ 
)
¯¯ 
{
˘˘ 
if
˙˙ 
(
˙˙ 
!
˙˙ 
OnBeforeSave
˙˙ !
(
˙˙! "
entity
˙˙" (
)
˙˙( )
)
˙˙) *
return
˚˚ 
false
˚˚  
;
˚˚  !
if
˝˝ 
(
˝˝ 
AutoValidate
˝˝  
&&
˝˝! #
!
˝˝$ %
Validate
˝˝% -
(
˝˝- .
entity
˝˝. 4
)
˝˝4 5
)
˝˝5 6
return
˛˛ 
false
˛˛  
;
˛˛  !
var
ÄÄ 
entry
ÄÄ 
=
ÄÄ 
Context
ÄÄ #
.
ÄÄ# $
Entry
ÄÄ$ )
(
ÄÄ) *
entity
ÄÄ* 0
)
ÄÄ0 1
;
ÄÄ1 2
if
ÅÅ 
(
ÅÅ 
entry
ÅÅ 
.
ÅÅ 
State
ÅÅ 
==
ÅÅ  "
EntityState
ÅÅ# .
.
ÅÅ. /
Detached
ÅÅ/ 7
)
ÅÅ7 8
{
ÇÇ 
Context
ÉÉ 
.
ÉÉ 
Attach
ÉÉ "
(
ÉÉ" #
entity
ÉÉ# )
)
ÉÉ) *
;
ÉÉ* +
var
ÑÑ 
ids
ÑÑ 
=
ÑÑ 
Context
ÑÑ %
.
ÑÑ% &
GetEntityKey
ÑÑ& 2
(
ÑÑ2 3
entity
ÑÑ3 9
)
ÑÑ9 :
;
ÑÑ: ;
if
ÖÖ 
(
ÖÖ 
ids
ÖÖ 
!=
ÖÖ 
null
ÖÖ #
&&
ÖÖ$ &
ids
ÖÖ' *
.
ÖÖ* +
Length
ÖÖ+ 1
>
ÖÖ2 3
$num
ÖÖ4 5
)
ÖÖ5 6
entry
ÜÜ 
.
ÜÜ 
State
ÜÜ #
=
ÜÜ$ %
EntityState
ÜÜ& 1
.
ÜÜ1 2
Modified
ÜÜ2 :
;
ÜÜ: ;
else
áá 
entry
àà 
.
àà 
State
àà #
=
àà$ %
EntityState
àà& 1
.
àà1 2
Added
àà2 7
;
àà7 8
}
ââ 
}
ãã 
try
çç 
{
éé 
int
èè 
result
èè 
=
èè 
Context
èè $
.
èè$ %
SaveChanges
èè% 0
(
èè0 1
)
èè1 2
;
èè2 3
if
êê 
(
êê 
result
êê 
==
êê 
-
êê 
$num
êê  
)
êê  !
return
ëë 
false
ëë  
;
ëë  !
}
íí 
catch
ìì 
(
ìì 
	Exception
ìì 
ex
ìì 
)
ìì  
{
îî 
SetError
ïï 
(
ïï 
ex
ïï 
.
ïï 
GetBaseException
ïï ,
(
ïï, -
)
ïï- .
)
ïï. /
;
ïï/ 0
return
ññ 
false
ññ 
;
ññ 
}
óó 
if
ôô 
(
ôô 
entity
ôô 
!=
ôô 
null
ôô 
)
ôô 
{
ôô  !
if
öö 
(
öö 
!
öö 
OnAfterSave
öö  
(
öö  !
entity
öö! '
)
öö' (
)
öö( )
return
õõ 
false
õõ  
;
õõ  !
}
úú 
return
ûû 
true
ûû 
;
ûû 
}
üü 	
public
™™ 
virtual
™™ 
bool
™™ 
Delete
™™ "
(
™™" #
object
™™# )
id
™™* ,
,
™™, -
bool
™™. 2
saveChanges
™™3 >
=
™™? @
false
™™A F
,
™™F G
bool
™™H L
useTransaction
™™M [
=
™™\ ]
false
™™^ c
)
™™c d
{
´´ 	
TEntity
¨¨ 
entity
¨¨ 
=
¨¨ 
DbSet
¨¨ "
.
¨¨" #
Find
¨¨# '
(
¨¨' (
id
¨¨( *
)
¨¨* +
;
¨¨+ ,
return
≠≠ 
Delete
≠≠ 
(
≠≠ 
entity
≠≠  
,
≠≠  !
saveChanges
≠≠" -
:
≠≠- .
saveChanges
≠≠/ :
,
≠≠: ;
useTransaction
≠≠< J
:
≠≠J K
useTransaction
≠≠L Z
)
≠≠Z [
;
≠≠[ \
}
ÆÆ 	
public
ƒƒ 
virtual
ƒƒ 
bool
ƒƒ 
Delete
ƒƒ "
(
ƒƒ" #
TEntity
ƒƒ# *
entity
ƒƒ+ 1
,
ƒƒ1 2
bool
ƒƒ3 7
saveChanges
ƒƒ8 C
=
ƒƒD E
true
ƒƒF J
,
ƒƒJ K
bool
ƒƒL P
useTransaction
ƒƒQ _
=
ƒƒ` a
false
ƒƒb g
)
ƒƒg h
{
≈≈ 	
if
«« 
(
«« 
entity
«« 
==
«« 
null
«« 
)
«« 
return
»» 
true
»» 
;
»» 
if
   
(
   
!
   
DeleteInternal
    
(
    !
entity
  ! '
,
  ' (
saveChanges
  ) 4
)
  4 5
)
  5 6
return
ÀÀ 
false
ÀÀ 
;
ÀÀ 
return
ÕÕ 
true
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
	protected
‘‘ 
virtual
‘‘ 
bool
‘‘ 
DeleteInternal
‘‘ -
(
‘‘- .
TEntity
‘‘. 5
entity
‘‘6 <
,
‘‘< =
bool
‘‘> B
saveChanges
‘‘C N
=
‘‘O P
false
‘‘Q V
,
‘‘V W
bool
‘‘X \
useTransaction
‘‘] k
=
‘‘l m
false
‘‘n s
)
‘‘s t
{
’’ 	
if
÷÷ 
(
÷÷ 
!
÷÷ 
OnBeforeDelete
÷÷ 
(
÷÷  
entity
÷÷  &
)
÷÷& '
)
÷÷' (
return
◊◊ 
false
◊◊ 
;
◊◊ 
var
ŸŸ 
dbSet
ŸŸ 
=
ŸŸ 
Context
ŸŸ 
.
ŸŸ  
Set
ŸŸ  #
<
ŸŸ# $
TEntity
ŸŸ$ +
>
ŸŸ+ ,
(
ŸŸ, -
)
ŸŸ- .
;
ŸŸ. /
try
€€ 
{
‹‹ 
dbSet
›› 
.
›› 
Remove
›› 
(
›› 
entity
›› #
)
››# $
;
››$ %
if
‡‡ 
(
‡‡ 
saveChanges
‡‡ 
)
‡‡  
Context
·· 
.
·· 
SaveChanges
·· '
(
··' (
)
··( )
;
··) *
if
„„ 
(
„„ 
!
„„ 
OnAfterDelete
„„ "
(
„„" #
entity
„„# )
)
„„) *
)
„„* +
return
‰‰ 
false
‰‰  
;
‰‰  !
}
ÂÂ 
catch
ÊÊ 
(
ÊÊ 
	Exception
ÊÊ 
ex
ÊÊ 
)
ÊÊ  
{
ÁÁ 
SetError
ËË 
(
ËË 
ex
ËË 
,
ËË 
true
ËË !
)
ËË! "
;
ËË" #
return
ÈÈ 
false
ÈÈ 
;
ÈÈ 
}
ÍÍ 
return
ÏÏ 
true
ÏÏ 
;
ÏÏ 
}
ÌÌ 	
public
˚˚ 
virtual
˚˚ 
bool
˚˚ 
Validate
˚˚ $
(
˚˚$ %
TEntity
˚˚% ,
entity
˚˚- 3
)
˚˚3 4
{
¸¸ 	
ValidationErrors
˝˝ 
.
˝˝ 
Clear
˝˝ "
(
˝˝" #
)
˝˝# $
;
˝˝$ %
bool
ˇˇ 
isValid
ˇˇ 
=
ˇˇ 

OnValidate
ˇˇ %
(
ˇˇ% &
entity
ˇˇ& ,
)
ˇˇ, -
;
ˇˇ- .
if
ÄÄ 
(
ÄÄ 
!
ÄÄ 
isValid
ÄÄ 
)
ÄÄ 
SetError
ÅÅ 
(
ÅÅ 
ValidationErrors
ÅÅ )
.
ÅÅ) *
ToString
ÅÅ* 2
(
ÅÅ2 3
)
ÅÅ3 4
)
ÅÅ4 5
;
ÅÅ5 6
return
ÉÉ 
isValid
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
	protected
éé 
virtual
éé 
void
éé 
OnAfterCreated
éé -
(
éé- .
TEntity
éé. 5
entity
éé6 <
)
éé< =
{
èè 	
}
ëë 	
	protected
óó 
virtual
óó 
void
óó 
OnAfterLoaded
óó ,
(
óó, -
TEntity
óó- 4
entity
óó5 ;
)
óó; <
{
òò 	
}
ôô 	
	protected
°° 
virtual
°° 
bool
°° 
OnBeforeSave
°° +
(
°°+ ,
TEntity
°°, 3
entity
°°4 :
)
°°: ;
{
¢¢ 	
return
££ 
true
££ 
;
££ 
}
§§ 	
	protected
ÆÆ 
virtual
ÆÆ 
bool
ÆÆ 
OnAfterSave
ÆÆ *
(
ÆÆ* +
TEntity
ÆÆ+ 2
entity
ÆÆ3 9
)
ÆÆ9 :
{
ØØ 	
return
∞∞ 
true
∞∞ 
;
∞∞ 
}
±± 	
	protected
ππ 
virtual
ππ 
bool
ππ 
OnAfterDelete
ππ ,
(
ππ, -
TEntity
ππ- 4
entity
ππ5 ;
)
ππ; <
{
∫∫ 	
return
ªª 
true
ªª 
;
ªª 
}
ºº 	
	protected
√√ 
virtual
√√ 
bool
√√ 
OnBeforeDelete
√√ -
(
√√- .
TEntity
√√. 5
entity
√√6 <
)
√√< =
{
ƒƒ 	
return
≈≈ 
true
≈≈ 
;
≈≈ 
}
∆∆ 	
	protected
—— 
virtual
—— 
bool
—— 

OnValidate
—— )
(
——) *
TEntity
——* 1
entity
——2 8
)
——8 9
{
““ 	
return
ÿÿ 
ValidationErrors
ÿÿ #
.
ÿÿ# $
Count
ÿÿ$ )
<
ÿÿ* +
$num
ÿÿ, -
;
ÿÿ- .
}
ŸŸ 	
public
‚‚ 
void
‚‚ 
SetError
‚‚ 
(
‚‚ 
string
‚‚ #
Message
‚‚$ +
)
‚‚+ ,
{
„„ 	
if
‰‰ 
(
‰‰ 
string
‰‰ 
.
‰‰ 
IsNullOrEmpty
‰‰ $
(
‰‰$ %
Message
‰‰% ,
)
‰‰, -
)
‰‰- .
{
ÂÂ 
ErrorException
ÊÊ 
=
ÊÊ  
null
ÊÊ! %
;
ÊÊ% &
return
ÁÁ 
;
ÁÁ 
}
ËË 
ErrorException
ÍÍ 
=
ÍÍ 
new
ÍÍ  
	Exception
ÍÍ! *
(
ÍÍ* +
Message
ÍÍ+ 2
)
ÍÍ2 3
;
ÍÍ3 4
}
ÓÓ 	
public
ÙÙ 
void
ÙÙ 
SetError
ÙÙ 
(
ÙÙ 
	Exception
ÙÙ &
ex
ÙÙ' )
,
ÙÙ) *
bool
ÙÙ+ /!
checkInnerException
ÙÙ0 C
=
ÙÙD E
false
ÙÙF K
)
ÙÙK L
{
ıı 	
ErrorException
ˆˆ 
=
ˆˆ 
ex
ˆˆ 
;
ˆˆ  
if
¯¯ 
(
¯¯ !
checkInnerException
¯¯ #
)
¯¯# $
{
˘˘ 
while
˙˙ 
(
˙˙ 
ErrorException
˙˙ %
.
˙˙% &
InnerException
˙˙& 4
!=
˙˙5 7
null
˙˙8 <
)
˙˙< =
{
˚˚ 
ErrorException
¸¸ "
=
¸¸# $
ErrorException
¸¸% 3
.
¸¸3 4
InnerException
¸¸4 B
;
¸¸B C
}
˝˝ 
}
˛˛ 
ErrorMessage
ÄÄ 
=
ÄÄ 
ErrorException
ÄÄ )
.
ÄÄ) *
Message
ÄÄ* 1
;
ÄÄ1 2
}
ÉÉ 	
public
àà 
void
àà 
SetError
àà 
(
àà 
)
àà 
{
ââ 	
ErrorException
ää 
=
ää 
null
ää !
;
ää! "
ErrorMessage
ãã 
=
ãã 
null
ãã 
;
ãã  
}
åå 	
}
èè 
}êê 